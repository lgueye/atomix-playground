---

- name: "remove {{ datacenter_role}}.{{ item }}.{{ domain }}"
  digital_ocean_domain:
    state: absent
    name: "{{ datacenter_role}}.{{ item }}.{{ domain }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  with_items:
    - "{{ servicename }}"
    - "{{ consul_product }}"

- name: "register {{ datacenter_role}}.{{ item }}.{{ domain }} to {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  digital_ocean_domain:
    state: present
    name: "{{ datacenter_role}}.{{ item }}.{{ domain }}"
    ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  with_items:
    - "{{ servicename }}"
    - "{{ consul_product }}"

- name: "remove www.{{ domain }}"
  digital_ocean_domain:
    state: absent
    name: "www.{{ domain }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  when: datacenter_role == 'primary'

- name: "remove {{ datacenter_role}}.{{ domain }}"
  digital_ocean_domain:
    state: absent
    name: "{{ datacenter_role}}.{{ domain }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  when: datacenter_role == 'fallback'

- name: "register www.{{ domain }} to {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  digital_ocean_domain:
    state: present
    name: "www.{{ domain }}"
    ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  when: datacenter_role == 'primary'

- name: "register {{ datacenter_role}}.{{ domain }} to {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  digital_ocean_domain:
    state: present
    name: "{{ datacenter_role}}.{{ domain }}"
    ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    oauth_token: "{{ lookup('env','DO_API_TOKEN') }}"
  when: datacenter_role == 'fallback'

- name: 'install nginx'
  package:
    name: "{{ item }}"
    state: present
  with_items:
  - 'nginx'
  - 'python3-passlib'

- htpasswd:
    path: "{{ htpasswd_path }}"
    name: 'sos'
    password: "{{ service_password }}"
    owner: root
    group: www-data
    mode: 0640

- name: "deactivate nginx default site"
  file: state='absent' path="/etc/nginx/sites-enabled/default"

- name: 'extrapolate nginx config'
  template: src='{{ item }}.{{ domain }}.j2' dest="/etc/nginx/sites-available/{{ datacenter_role}}.{{ item }}.{{ domain }}"
  with_items:
    - "{{ servicename }}"
    - "{{ consul_product }}"

- name: "create static dir /var/www/www.{{ domain }}"
  file: state='directory' path="/var/www/www.{{ domain }}"
  when: datacenter_role == 'primary'

- name: "create static dir /var/www/{{ datacenter_role}}.{{ domain }}"
  file: state='directory' path="/var/www/{{ datacenter_role}}.{{ domain }}"
  when: datacenter_role == 'fallback'

- name: 'extrapolate nginx config'
  template: src='www.{{ domain }}.j2' dest="/etc/nginx/sites-available/www.{{ domain }}"
  when: datacenter_role == 'primary'

- name: 'extrapolate nginx config'
  template: src='{{ datacenter_role}}.{{ domain }}.j2' dest="/etc/nginx/sites-available/{{ datacenter_role}}.{{ domain }}"
  when: datacenter_role == 'fallback'

- name: 'extrapolate index.html'
  template: src='index.html.j2' dest="/var/www/www.{{ domain }}/index.html"
  when: datacenter_role == 'primary'

- name: 'extrapolate index.html'
  template: src='index.html.j2' dest="/var/www/{{ datacenter_role}}.{{ domain }}/index.html"
  when: datacenter_role == 'fallback'

- name: 'link sites-available sites-enabled'
  file: state='link' src="/etc/nginx/sites-available/{{ datacenter_role}}.{{ item }}.{{ domain }}" dest="/etc/nginx/sites-enabled/{{ datacenter_role}}.{{ item }}.{{ domain }}"
  with_items:
    - "{{ servicename }}"
    - "{{ consul_product }}"

- name: 'link sites-available sites-enabled'
  file: state='link' src="/etc/nginx/sites-available/www.{{ domain }}" dest="/etc/nginx/sites-enabled/www.{{ domain }}"
  when: datacenter_role == 'primary'

- name: 'link sites-available sites-enabled'
  file: state='link' src="/etc/nginx/sites-available/{{ datacenter_role}}.{{ domain }}" dest="/etc/nginx/sites-enabled/{{ datacenter_role}}.{{ domain }}"
  when: datacenter_role == 'fallback'

- name: 'restart nginx'
  service: name='nginx' enabled='yes' state='restarted'

- name: 'wait for port 80 to come up'
  wait_for: port="80" delay='1' timeout='5'

- debug: msg="Checkout useful urls bellow for datacenter {{ datacenter_role}}"
- debug: msg="Consul ui => http://{{ datacenter_role}}.consul.{{ domain }}"
- debug: msg="Sos backend health endpoint => http://{{ datacenter_role}}.sos.{{ domain }}/actuator/health"
- debug: msg="Sos backend api endpoint => http://{{ datacenter_role}}.sos.{{ domain }}/api/events"
- debug: msg="Corporate website => http://www.{{ domain }}"
  when: datacenter_role == 'primary'
- debug: msg="Corporate website => http://{{ datacenter_role}}.{{ domain }}"
  when: datacenter_role == 'fallback'
